/*
 * Beckn Protocol Core
 *
 * Beckn Core Transaction API specification
 *
 * API version: 1.1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package types

// Describes an arbitrary region of space. The network policy should contain a published list of supported regions by the network.
type Region struct {
	// The number of dimensions that are used to describe any point inside that region. The most common dimensionality of a region is 2, that represents an area on a map. There are regions on the map that can be approximated to one-dimensional regions like roads, railway lines, or shipping lines. 3 dimensional regions are rarer, but are gaining popularity as flying drones are being adopted for various fulfillment services.
	Dimensions string `json:"dimensions,omitempty"`
	// The type of region. This is used to specify the granularity of the region represented by this object. Various examples of two-dimensional region  package types are city, country, state, district, and so on. The network policy should contain a list of all possible region  package types supported by the network.
	Type_ string `json:"type,omitempty"`
	// Name of the region as specified on the map where that region exists.
	Name string `json:"name,omitempty"`
	// A standard code representing the region. This should be interpreted in the same way by all network participants.
	Code string `json:"code,omitempty"`
	// A string representing the boundary of the region. One-dimensional regions are represented by polylines. Two-dimensional regions are represented by polygons, and three-dimensional regions can represented by polyhedra.
	Boundary string `json:"boundary,omitempty"`
	// The url to the map of the region. This can be a globally recognized map or the one specified by the network policy.
	MapUrl string `json:"map_url,omitempty"`
}
